"""
ICOS Intelligence Coordination
----------------------------------------
The ICOS Coordination API has two goals:
a) First, models can be pre-built and added to the API as specified in a Developer guide. The API outputs model predictions or information about a new model trained in this scenario. This is performed for easy integration of ML models with automated functions of the OS developed in ICOS.
b) Second, part of this API is targeted to extend ML libraries to make them available to a technical user to save storage resources in devices with access to the API. In this context, the API returns a framework environment to allow users easy plug-and-play with the environment already available in the API.

Copyright ¬© 2022-2025 CeADAR Ireland

This program is free software: you can redistribute it and/or modify it under the terms of the Apache License 2.0 as published by the Free Software Foundation.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the Apache License v2.0 for more details.
You should have received a copy of the Apache License v2.0 along with this program. If not, see <https://www.apache.org/licenses/LICENSE-2.0>.

This work has received funding from the European Union's HORIZON research
and innovation programme under grant agreement No. 101070177.
----------------------------------------
"""

service: "api_service.py:svc"
description: |
  <img src="https://i.imgur.com/xaimFMT.png" width="450">
  <h1>Intelligence Coordination API</h1>

  <h2>ICOS Final Version</h2>

  <p>The AI coordination module facilitates optimisation, predictive analytics, and applying machine learning
  models across the edge-cloud continuum. It entails implementing policies for utilising, sharing, and
  updating models. This acts as an interface and provides coordination between the meta-kernel and user
  layers providing and requesting services. This component helps to coordinate with other intelligence
  layers of the same domain in the continuum, providing ICOS with the ability to learn collaboratively.</p>

  <p>The AI coordination API offers a mechanism for estimating the metrics consumption of the ICOS agents.
  The metrics could be CPU, Memory or Energy consumption of ICOS nodes.
  This API endpoint service will save a reference to the saved model in the AI analytics module,
  which is a metrics-usage prediction model in this case. When a request is made to the API, this model will
  forecast metrics usage one minute in the future.</p>


  AI coordination API
  | APIEndpoints | Input | Output |
  | ------------ | ----- | ------ |
  | POST <a href="#/core/train"><code>/train</code></a> | JSON | JSON |<br>
  | POST <a href="#/core/predict"><code>/predict</code></a> | JSON | JSON |<br>
  | POST <a href="#/core/detect_drift"><code>/detect_drift</code></a> | JSON | NumpyNdarray |<br>
  | POST <a href="#/core/get_anomalies"><code>/get_anomalies</code></a> | JSON | JSON |<br>
  | POST <a href="#/core/launch_mlflow_ui"><code>/launch_mlflow_ui</code></a> | JSON | JSON |<br>
  | POST <a href="#/core/show_models"><code>/show_models</code></a> | JSON | JSON |<br>
  | POST <a href="#/core/remove_model"><code>/remove_model</code></a> | JSON | JSON |<br>
  | POST <a href="#/core/sync_model_repo"><code>/sync_model_repo</code></a> | JSON | JSON |<br>

  <h1>Help</h1>

  * [üìñ Documentation](https://docs.google.com/document/d/1-3q4OepV1mtltkiWY72eoWhXAftt9gBCZ_en_jZpIkQ/edit?usp=sharing): Learn how to implement new algorithms for this API.
  * [üõ†Ô∏è Intelligence coordination GitHub Repo](https://gitlab.com/CeADARIreland/UCD/IDG/PRODUCTION/ICOS-AI-Coordination-API): Github repro for this API

  <h2>Contact</h2>

  [CeADAR Team](https://ceadar.ie/)

  <h2>License</h2>
  Copyright ¬© CeADAR Ireland 2022-2025

labels:
  owner: CeADAR
  stage: dev

include:
 - "dataset/"
 - "analytics/"
 - "processing/"
 - "models/"
 - "tai/"
 - "configuration.yaml"
 - "*.json"
 - "*.py"
 - "**/*.py"
exclude:
 - "mlruns/"
 - "tests/"
 - "logs/"
 - "locustfile.py"
 - "**/*.__pycache__"
 - "*.__pycache__"
 - "**/__pycache__/"
python:
    packages:
    requirements_txt: "./requirements.txt"
docker:
    distro: debian
    python_version: "3.10"
    system_packages:
      - git
